generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique

  firstName String?
  lastName  String?

  phoneIdd    String
  phoneNumber String @unique

  trId String @unique

  hashed Hashed?

  roles Role[]

  reservations Reservation[]

  @@map("users")
}

model Hashed {
  id String @id @default(uuid())

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  hash     String
  hashedRt String?
}

model Role {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role String @unique

  users User[]
}

model Reservation {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  originLat  Decimal
  originLng  Decimal
  originName String

  destinationLat  Decimal
  destinationLng  Decimal
  destinationName String

  departureTimestamp Int

  isRoundTrip     Boolean?
  returnTimestamp Int?

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  @@map("reservations")
}

model Vehicle {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  vehicleName        String
  vehicleDescription String?

  capacity  Int
  basePrice Int

  imageName String?

  @@map("vehicles")
}
